name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install thridparty
      run: |
           wget https://github.com/guodongxiaren/thirdparty/archive/refs/tags/test.tar.gz
           tar xvf test.tar.gz
           wget https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.17.3.tar.gz
           tar xvf v3.17.3.tar.gz
           cd protobuf-3.17.3
           ./autogen.sh
           ./configure
           make -j $(nproc)
           sudo make install
           sudo ldconfig
           
    - name: config brpc
      run: |
           THIRD_DIR=thirdparty-test
           #export PATH=`pwd`/${THIRD_DIR}/protobuf/bin:$PATH
           #export LD_LIBRARY_PATH=`pwd`/${THIRD_DIR}/protobuf/lib:$LD_LIBRARY_PATH
           #sh config_brpc.sh --headers="${THIRD_DIR}/gflags/include ${THIRD_DIR}/protobuf/include" --libs="${THIRD_DIR}/gflags/lib/ ${THIRD_DIR}/protobuf/lib"
           sh config_brpc.sh --headers="${THIRD_DIR}/gflags/include " --libs="${THIRD_DIR}/gflags/lib/ "


    - name: make
      run: |
           make -j $(nproc)

      
